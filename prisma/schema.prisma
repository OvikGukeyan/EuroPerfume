generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  fullName         String
  email            String            @unique
  password         String
  role             UserRole          @default(USER)
  verified         DateTime?
  provider         String?
  providerId       String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  cart             Cart?
  orders           Order[]
  verificationCode VerificationCode?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id            Int                  @id @default(autoincrement())
  name          String
  imageUrl      String
  categoryId    Int
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  brand         Brands
  concentration PerfumeConcentration
  description   String
  gender        Gender
  notes         Notes[]
  price         Int
  releaseYear   Int
  available     Boolean
  types         Types[]
  cartItems     CartItem[]
  category      Category             @relation(fields: [categoryId], references: [id])
  translations  ProductTranslation[]
}

model ProductTranslation {
  id          Int       @id @default(autoincrement())
  language    Languages
  description String
  productId   Int
  product     Product   @relation(fields: [productId], references: [id])

  @@unique([language, productId])
}

model Cart {
  id          Int        @id @default(autoincrement())
  userId      Int?       @unique
  token       String
  totalAmount Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User?      @relation(fields: [userId], references: [id])
  items       CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int?
  token       String
  totalAmount Int
  status      OrderStatus
  peymentId   String?
  items       Json
  fullName    String
  address     String
  email       String
  phone       String
  comment     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User?       @relation(fields: [userId], references: [id])
}

model VerificationCode {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  code      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, code])
}

model Story {
  id              Int         @id @default(autoincrement())
  previewImageUrl String
  createdAt       DateTime    @default(now())
  items           StoryItem[]
}

model StoryItem {
  id        Int      @id @default(autoincrement())
  storyId   Int
  sourceUrl String
  createdAt DateTime @default(now())
  story     Story    @relation(fields: [storyId], references: [id])
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CENCELLED
}

enum UserRole {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  UNISEX
}

enum PerfumeConcentration {
  EXTRAIT
  PERFUME
  EAU_DE_PARFUM
  EAU_DE_TOILETTE
  EAU_DE_COLOGNE
}

enum Notes {
  CITRUS
  FLORAL
  GREEN
  FRUITY
  SPICY
  WOODY
  ORIENTAL
  MUSK
  AQUATIC
}

enum Types {
  NICHE
  ARABIAN
  DESIGNER
  CELEBRITY
  INDIE
}

enum Brands {
  CHANEL
  DIOR
  GUCCI
  TOM_FORD
  YSL
  VERSACE
  ARMANI
  GIVENCHY
  PRADA
  BURBERRY
  CALVIN_KLEIN
  LACOSTE
  HUGO_BOSS
  RALPH_LAUREN
  VALENTINO
  BOTTEGA_VENETA
  FENDI
  LOUIS_VUITTON
  SALVATORE_FERRAGAMO
  MICHAEL_KORS
  VICTORIA_SECRET
}

enum Languages {
  RU
  DE
}
